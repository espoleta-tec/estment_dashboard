{"version":3,"sources":["webpack:///./src/css/app.scss","webpack:///./src/css/quasar.variables.scss","webpack:///app.scss","webpack:///./src/src/App.vue","webpack:///./src/components/Drawer.vue","webpack:///./src/pages/Dashboard.vue","webpack:///./src/pages/config/Connectivity.vue"],"names":[],"mappings":"AAGA;EACE,0ECyBgB;AC3BlB,C;;ACoEA;EACA;AACA;;ACQA;EACE;AA/EF,C;;ACiEA;EACE,8CAFU;EAGV,iDAHU;AA/DZ;AAqEA;EACE,+CAPU;EAQV,gDARU;AA1DZ;AAqEA;EACE,+CAZU;AAtDZ;;AAqEA;;;;;;;EAAA,C;AC4BA;;EAAA,C","file":"css/app.b9622938.css","sourcesContent":["@import '~src/css/quasar.variables.scss', 'quasar/src/css/variables.sass';\n// app global css in SCSS form\n\n.bg-drawer {\n  background:  $drawer-gradient;\n}\n","// Quasar SCSS (& Sass) Variables\n// --------------------------------------------------\n// To customize the look and feel of this app, you can override\n// the Sass/SCSS variables found in Quasar's source Sass/SCSS files.\n\n// Check documentation for full list of Quasar variables\n\n// Your own variables (that are declared here) and Quasar's own\n// ones will be available out of the box in your .vue/.scss/.sass files\n\n// It's highly recommended to change the default colors\n// to match your app's branding.\n// Tip: Use the \"Theme Builder\" on Quasar's documentation website.\n\n$primary: #242931;\n$secondary: #ff7d26;\n$accent: #11b9d1;\n\n$dark: #242931;\n$dark-2: #606a74;\n$light: #eeeeee;\n\n$positive: #21BA45;\n$negative: #C10015;\n$info: #31CCEC;\n$warning: #ffa826;\n\n$temperature-gradient: linear-gradient(0deg, blue, green, yellow, red);\n$humidity-gradient: linear-gradient(0deg, #eeebeb, #0065fc 20%);\n$drawer-gradient: linear-gradient(180deg, #010b2b 10%, #20586e 50%, #313b45 90%);\n\n",".bg-drawer {\n  background: linear-gradient(180deg, #010b2b 10%, #20586e 50%, #313b45 90%);\n}","<template>\n  <div id=\"q-app\">\n    <router-view :key=\"$store.state.api.masterUri\"/>\n  </div>\n</template>\n<script lang=\"ts\">\n  import { defineComponent } from '@vue/composition-api';\n  import { icons } from 'assets/icons/import-icons';\n  import { icons as styleIcons } from 'assets/icons/styled/import-styled';\n\n  export default defineComponent({\n    name: 'App',\n    created(): void {\n      // this.$axios.defaults.baseURL = `http://${this.$store.state.api.masterUri}/`;\n      // console.log(this.$axios.defaults.baseURL);\n      this.$axios.interceptors.response.use((response) => {\n        return response;\n      }, error => {\n        if (error.response.status === 401) {\n          this.$store.commit('login/resetToken');\n          this.$router.push('/login').catch(e => {\n            console.log(e.message);\n          });\n        }\n      });\n\n      this.$store.dispatch('api/changeMaster').catch(e => {\n        console.log(e.message);\n      });\n\n      this.$q.iconMapFn = (iconName => {\n        let passName = iconName;\n        if (passName in styleIcons) {\n          return { icon: styleIcons[passName] };\n        }\n\n        if (passName in icons) {\n          return { icon: icons[passName] };\n        }\n        passName = 'vortex_' + iconName;\n        if (passName in icons) {\n          return { icon: icons[passName] };\n        }\n      });\n\n      this.$store.commit('time/setPhases');\n      setInterval(() => {\n        this.$store.commit('time/setPhases');\n      }, 10000);\n    },\n    methods: {\n      // openWebSocket() {\n      //   const ws = new WebSocket(`ws://${this.$store.state.api.masterUri}/`);\n      //   ws.onopen = () => {\n      //     console.log('websocket connection opened');\n      //     ws.send('vue client connected');\n      //     ws.onmessage = (event) => {\n      //       this.$store.commit('data/updateState', event.data);\n      //     };\n      //     ws.onclose = () => {\n      //       setTimeout(() => {\n      //         this.openWebSocket();\n      //       }, 500);\n      //     };\n      //   };\n      // }\n    }\n  });\n</script>\n<style>\n  body {\n    font-family: Roboto, -apple-system, Helvetica Neue, Helvetica, Arial, sans-serif;\n  }\n</style>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.bg-drawer {\n  /*filter: blur(50px);*/\n}\n","@import '~src/css/quasar.variables.scss', 'quasar/src/css/variables.sass';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$theBorder: solid rgba(255, 255, 255, 0.1) 1px;\n.splitSession {\n  border-top: $theBorder;\n  border-bottom: $theBorder;\n}\n\n.verticalSplit {\n  border-left: $theBorder;\n  border-right: $theBorder;\n}\n\n.leftSplit {\n  border-left: $theBorder;\n}\n\n/*.q-btn:hover {\n  background: $secondary !important;\n}\n\n.q-btn:hover div {\n  color: white !important;\n}\n */\n","@import '~src/css/quasar.variables.scss', 'quasar/src/css/variables.sass';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*.q-field__native {\n  color: $secondary !important;\n}*/\n"],"sourceRoot":""}